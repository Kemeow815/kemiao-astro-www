---
import { getCollection } from 'astro:content';
import BackgroundDecoration from '@/components/common/BackgroundDecoration.astro';
import PostCard from '@/components/features/blog/PostCard.astro';
import BaseLayout from '@/components/layouts/BaseLayout.astro';

const allPosts = await getCollection('blog');

const posts = allPosts
  .filter(({ data: { draft = false } }) => !draft)
  .sort(({ data: { date: dateA } }, { data: { date: dateB } }) => dateB.valueOf() - dateA.valueOf());

const postsByYear = posts.reduce(
  (acc, post) => {
    const year = new Date(post.data.date).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof posts>,
);

const years = Object.keys(postsByYear)
  .map(Number)
  .sort((a, b) => b - a);
---

<BaseLayout title="归档" description="所有归档文章">
  <div class="relative min-h-screen py-20">
    <BackgroundDecoration />
    
    <div class="max-w-7xl mx-auto px-4 sm:px-6 py-6">
      <div class="grid grid-cols-12 gap-6 sm:gap-8 lg:gap-12">
        <main class="col-span-12 lg:col-span-9 space-y-16 sm:space-y-24">
          {years.map((year) => (
            <section id={`year-${year}`} class="year-section scroll-mt-24 sm:scroll-mt-32">
              <div class="relative mb-8 sm:mb-12">
                <h2 class="font-serif text-4xl sm:text-5xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 drop-shadow-sm">{year}</h2>
                <div class="mt-5 w-16 h-[1.5px] bg-zinc-400 dark:bg-zinc-500"></div>
              </div>

              <div class="space-y-6 sm:space-y-8">
                {postsByYear[year].map((post, index) => (
                  <PostCard post={post} index={index} />
                ))}
              </div>
            </section>
          ))}
        </main>

        <aside class="hidden lg:block lg:col-span-3">
          <div class="sticky top-24">
            <nav class="flex flex-col p-4 rounded-2xl bg-white/20 dark:bg-zinc-800/20 backdrop-blur-lg border border-zinc-200/30 dark:border-zinc-700/30 shadow-xl shadow-zinc-900/5">
              <h3 class="text-xs font-medium text-zinc-500 dark:text-zinc-400 uppercase tracking-wider mb-3 pl-0.5">文章年份</h3>
              <div class="flex flex-wrap gap-2">
                {years.map(year => (
                  <a 
                    href={`#year-${year}`} 
                    class="sidebar-link group relative text-sm w-[4.5rem] py-1.5 rounded-xl bg-gradient-to-br from-white/90 to-white/40 dark:from-zinc-800/90 dark:to-zinc-800/40 text-zinc-700 dark:text-zinc-300 font-medium backdrop-blur-sm hover:scale-105 hover:bg-violet-50/90 hover:text-violet-700 hover:from-violet-50/90 hover:to-violet-50/30 dark:hover:from-violet-800/60 dark:hover:to-violet-900/40 dark:hover:text-violet-200 transition-all duration-300 ease-out text-center"
                    data-year={year}
                  >
                    {year}
                    <span class="absolute inset-0 rounded-xl ring-1 ring-inset ring-zinc-900/5 dark:ring-white/5 group-hover:ring-violet-200/50 dark:group-hover:ring-violet-400/30 transition-colors"></span>
                    <span class="absolute -inset-px rounded-xl bg-gradient-to-br from-white/40 via-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity dark:from-white/10 dark:via-white/5 dark:to-transparent pointer-events-none"></span>
                    <span class="absolute inset-0 rounded-xl shadow-[0_0_0.5px_0.5px_rgba(0,0,0,0.06)] dark:shadow-[0_0_0.5px_0.5px_rgba(255,255,255,0.06)]"></span>
                  </a>
                ))}
              </div>
            </nav>
          </div>
        </aside>
      </div>
    </div>
    
    <div class="lg:hidden fixed bottom-0 inset-x-0 z-30 pb-safe">
      <div class="w-full bg-white/90 dark:bg-zinc-900/90 backdrop-blur-md border-t border-zinc-200/80 dark:border-zinc-800/80">
        <div class="max-w-7xl mx-auto px-4 py-2">
          <div class="flex items-center">
            <div class="overflow-x-auto hide-scrollbar flex-grow">
              <div class="flex space-x-1 px-0.5">
                {years.map(year => (
                  <a 
                    href={`#year-${year}`} 
                    class="mobile-year-link whitespace-nowrap text-sm px-2.5 py-0.5 rounded-lg text-zinc-600 dark:text-zinc-400 border border-zinc-200/80 dark:border-zinc-700/80 hover:text-zinc-900 dark:hover:text-white hover:border-zinc-400 dark:hover:border-zinc-500 transition-colors" 
                    data-year={year}
                  >
                    {year}
                  </a>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  @import "tailwindcss";
  
  .hide-scrollbar {
    scrollbar-width: none;
    -ms-overflow-style: none;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
  
  .sidebar-link.active {
    @apply bg-gradient-to-br from-violet-50/90 to-violet-50/30 text-violet-700 dark:from-violet-800/60 dark:to-violet-900/40 dark:text-violet-200 scale-105;
  }
  
  .sidebar-link.active span:first-of-type {
    @apply ring-violet-200/50 dark:ring-violet-400/30;
  }
  
  .sidebar-link.active span:nth-of-type(2) {
    @apply opacity-100;
  }
  
  .mobile-year-link.active {
    @apply text-zinc-900 dark:text-white border-zinc-400 dark:border-zinc-500;
  }
  
  .shadow-up {
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
  }
  
  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
  }
  
  .touch-manipulation {
    touch-action: manipulation;
  }
</style>

<script>
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const targetId = this.getAttribute('href');
      if (targetId) {
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({ 
            behavior: 'smooth',
            block: 'start'
          });
          
          history.pushState(null, '', targetId);
        }
      }
    });
  });
  
  const observeElements = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const id = entry.target.getAttribute('id');
          const year = id?.replace('year-', '');
          
          document.querySelectorAll('.sidebar-link').forEach((link: HTMLAnchorElement) => {
            link.classList.remove('active');
            if (link.dataset.year === year) {
              link.classList.add('active');
            }
          });
          
          document.querySelectorAll('.mobile-year-link').forEach((link: HTMLAnchorElement) => {
            link.classList.remove('active');
            if (link.dataset.year === year) {
              link.classList.add('active');
              link.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
            }
          });
        }
      });
    }, { 
      rootMargin: '-20% 0px -60% 0px',
      threshold: 0
    });
    
    document.querySelectorAll('.year-section').forEach(section => {
      observer.observe(section);
    });
  };
  
  document.addEventListener('DOMContentLoaded', () => {
    observeElements();
    
    const hash = window.location.hash;
    if (hash && hash.startsWith('#year-')) {
      const year = hash.replace('#year-', '');
      
      document.querySelectorAll('.sidebar-link').forEach((link: HTMLAnchorElement) => {
        if (link.dataset.year === year) {
          link.classList.add('active');
        }
      });
      
      document.querySelectorAll('.mobile-year-link').forEach((link: HTMLAnchorElement) => {
        if (link.dataset.year === year) {
          link.classList.add('active');
          setTimeout(() => {
            link.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
          }, 300);
        }
      });
    } else {
      const firstSidebarLink = document.querySelector('.sidebar-link');
      const firstMobileLink = document.querySelector('.mobile-year-link');
      
      if (firstSidebarLink) firstSidebarLink.classList.add('active');
      if (firstMobileLink) firstMobileLink.classList.add('active');
    }
  });
</script>
